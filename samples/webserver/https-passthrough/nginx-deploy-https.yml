# kubectl create secret tls nginx-tls --cert=./generate-self-signed-cert/domain.crt --key=./generate-self-signed-cert/domain.key 



apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  # file-like keys
  nginx.conf: |
    server {
      listen 443 ssl;
      server_name nginx-test.lab.pcfdemo.net;
      root /www;

      location / {
    
      }
      ssl_certificate     /etc/nginx/ssl/tls.crt;
      ssl_certificate_key /etc/nginx/ssl/tls.key;
    } 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-www
data:
  # file-like keys
  index.html: |
    Hello
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: 
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 1

  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
      annotations:
        fluentbit.io/parser: nginx
    spec:
      containers:
      - image: nginx
        name: nginx-app
        imagePullPolicy: Always
        resources: {}
        ports:
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
        - mountPath: /etc/nginx/ssl
          name: nginx-tls
        - mountPath: /www
          name: nginx-www
      volumes: 
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: nginx-tls
        secret:
          secretName: nginx-tls
      - name: nginx-www
        configMap:
          name: nginx-www

      serviceAccount: nginx
      serviceAccountName: nginx

status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-app-service
spec:
        #type: LoadBalancer
        #type: ClusterIP
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443

